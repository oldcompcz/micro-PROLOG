exptran-mod(: Expression-Parse)(@ # + "-" ~ * % APPEND CONS func & and yes rel-form)
((Zip X X Y Y)
  (NOT LST X)
  /)
((Zip () () X X)
  /)
((Zip (X|Y) (Z|x) y z)
  (X-parse X Z y X1)
  (Zip Y x X1 z))
((symbval ()))
((symbval ((X|Y)|Z))
  (APPEND x (y) Y)
  (IF (sysop X) ((EQ x (z X1)) (EQ y (z X X1))) ((EQ y (X|x))))
  (symbval Z))
((X-parse X X Y Y)
  (NOT LST X)
  /)
((X-parse (X Y Z) x y z)
  (op Y)
  (X-parse X X1 y Y1)
  (name Y Z1)
  (X-parse Z x1 Y1 ((Z1 X1 x1 x)|z))
  /)
((X-parse (X Y Z x|y) z X1 Y1)
  (op Y)
  (op x)
  /
  (IF (less Y x) ((X-parse (X Y (Z x|y)) z X1 Y1)) ((X-parse ((X Y Z) x|y) z X1 Y1))))
((X-parse (X Y Z) x ((CONS y z x)|X1) Y1)
  (NOT VAR X)
  (EQ X CONS)
  /
  (Zip (Y Z) (y z) X1 Y1))
((X-parse (X|Y) Z x y)
  (fn X)
  /
  (Zip Y z x ((X|X1)|y))
  (APPEND z (Z) X1))
((X-parse X Y Z x)
  (Zip X Y Z x))
((name / %)
  /)
((name ~ "-")
  /)
((name X X))
((fn1 APPEND))
((fn1 @))
((fn1 X)
  (CL ((func X))))
((fn1 X)
  (PP X assumed not to be function name)
  FAIL)
((fn X)
  (CON X)
  (fn1 X))
((sysop +))
((sysop ~))
((sysop "-"))
((sysop *))
((sysop %))
((sysop /))
((op X)
  (NOT VAR X)
  (sysop X))
((less + X))
((less "-" X))
((less ~ X))
((COPYRIGHT 1983 LPA LTD (V 5 -29)))
((: X)
  (Expression-Parse X Y Z)
  (? Z)
  /
  (PP Y))
((Expression-Parse X Y Z)
  (VAR Z)
  /
  (X-parse X Y Z ())
  /)
((Expression-Parse X X Y)
  (NOT CL ((rel-form)))
  (symbval Y)
  /)
CLMOD
